@using Microsoft.AspNetCore.Authorization
@using BeCoreApp.Authorization
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "User List";
}
@section Scripts{

    <script src="~/app/controllers/user/index.js" asp-append-version="true"></script>
    <script>
        var userObj = new UserController();
        userObj.initialize();
    </script>
}
@section Styles{

}
<!-- BEGIN: Subheader -->
@await Component.InvokeAsync("SubHeader")
<!-- END: Subheader -->
<div class="m-content">
    <div class="m-portlet m-portlet--mobile">
        <div class="m-portlet__head">
            <div class="m-portlet__head-caption">
                <div class="m-portlet__head-title">
                    <h3 class="m-portlet__head-text">
                        Users
                    </h3>
                </div>
            </div>
        </div>
        <div class="m-portlet__body">
            <!--begin: Search Form -->
            <div class="m-form m-form--label-align-right m--margin-top-20 m--margin-bottom-30">
                <div class="row align-items-center">
                    <div class="col-xl-5 order-2 order-xl-1">
                        <div class="form-group m-form__group row align-items-center">
                            <div class="col-md-6">
                                <div class="m-input-icon m-input-icon--left">
                                    <input type="text" id="txt-search-keyword" class="form-control m-input" placeholder="Search...">
                                    <span class="m-input-icon__icon m-input-icon__icon--left">
                                        <span><i class="la la-search"></i></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-7 order-1 order-xl-2 m--align-right">
                        @{
                            var result = await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Create);
                        }
                        @if (result.Succeeded)
                        {
                        <a href="#" id="btn-create" class="btn btn-success m-btn m-btn--custom m-btn--icon m-btn--air m-btn--pill">
                            <span><i class="flaticon-plus"></i><span>Create</span></span>
                        </a>
                        }
                        
                    </div>
                </div>
            </div>
            <!--end: Search Form -->
            <!--begin::Section-->
            <div class="m-section">
                <div class="m-section__content">
                    <div class="table-responsive">
                        <table class="table m-table m-table--head-separator-primary">
                            <thead>
                                <tr>
                                    <th>Account</th>
                                    <th>NAme</th>
                                    <th>Avatar</th>
                                    <th>Created Date</th>
                                    <th>Status</th>
                                    <th>Chức Năng</th>
                                </tr>
                            </thead>
                            <tbody id="tbl-content"></tbody>
                        </table>
                    </div>
                    @await Component.InvokeAsync("Paging")
                </div>
            </div>
            <!--end::Section-->
        </div>
    </div>
</div>

<script id="table-template" type="x-tmpl-mustache">
    <tr>
        <td>{{UserName}}</td>
        <td>{{FullName}}</td>
        <td>{{{Avatar}}}</td>
        <td>{{{DateCreated}}}</td>
        <td>{{{Status}}}</td>
        <td>
            @if ((await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Update)).Succeeded)
            {
                <a href="#" data-id="{{Id}}" class="btn-edit m-portlet__nav-link btn m-btn m-btn--hover-accent m-btn--icon m-btn--icon-only m-btn--pill"><i class="la la-edit"></i></a>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, "USER", Operations.Delete)).Succeeded)
            {
                <a href="#" data-id="{{Id}}" class="btn-delete m-portlet__nav-link btn m-btn m-btn--hover-danger m-btn--icon m-btn--icon-only m-btn--pill"><i class="la la-trash"></i></a>
            }
        </td>
    </tr>
</script>
<script id="role-template" type="x-tmpl-mustache">
    <div class="checkbox">
        <label>
            <input type="checkbox" {{Checked}} value="{{Name}}" name="ckRoles">
            <span class="text">{{Description}}</span>
        </label>
    </div>
</script>
@Html.Partial("_AddEditModal.cshtml")